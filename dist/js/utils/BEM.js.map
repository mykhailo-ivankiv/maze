{"version":3,"sources":["js/utils/BEM.js"],"names":[],"mappings":";AAAA,aAAS,UAAU,CAAC,SAAS,EAAE;AAC3B,YAAI,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC;;AAEvB,YAAI,OAAO,SAAS,CAAC,CAAC,AAAC,KAAK,QAAQ,EAAE;AAClC,gBAAI,IAAI,IAAI,GAAG,SAAS,CAAC,CAAC,CAAA;SAC7B;;AAED,eAAO,IAAI,GAAG,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,UAAA,QAAQ,EAAI;AACxC,gBAAI,MAAM,CAAC;AACX,gBAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;AAC9B,sBAAM,GAAG,IAAI,GAAG,IAAI,GAAG,QAAQ,CAAC;aACnC,MAAM;AACH,sBAAM,GAAG,IAAI,GAAG,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;;AAErC,oBAAG,QAAQ,CAAC,KAAK,EAAE;AACf,0BAAM,IAAI,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC;iBAClC;aACJ;;AAED,mBAAO,MAAM,CAAC;SACjB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;KACnB;;AAED,QAAI,GAAG,GAAG;AACN,SAAC,EAAA,WAAC,EAAC,EAAE;AACD,mBAAO,UAAU,WAAW,EAAgB;oBAAd,SAAS,gCAAC,EAAE;;AACtC,oBAAI,CAAC,EAAE,CAAC,CAAC;AACT,oBAAI,OAAO,WAAW,KAAK,QAAQ,EAAE;AACjC,qBAAC,GAAG,WAAW,CAAC;iBACnB,MAAM;AACH,6BAAS,GAAG,WAAW,IAAI,EAAE,CAAC;iBACjC;;AAED,iBAAC,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,UAAC,QAAQ;2BAAK,SAAS,CAAC,QAAQ,CAAC;iBAAA,CAAC,IAAI,EAAE,CAAC;;AAE3E,uBAAO,UAAU,CAAC,EAAC,CAAC,EAAD,EAAC,EAAE,CAAC,EAAD,CAAC,EAAE,CAAC,EAAD,CAAC,EAAC,CAAC,CAAA;aAC/B,CAAA;SACJ;KACJ,CAAA;;qBAEc,GAAG","file":"js/utils/BEM.js","sourcesContent":["function getBEMPAth(blockData) {\n    var base = blockData.b;\n\n    if (typeof(blockData.e) === \"string\") {\n        base += \"__\" + blockData.e\n    }\n\n    return base + \" \" + blockData.m.map(modifier => {\n            var result;\n            if (typeof modifier === \"string\") {\n                result = base + \"--\" + modifier;\n            } else {\n                result = base + \"--\" + modifier.name;\n\n                if(modifier.value) {\n                    result += \"_\" + modifier.value;\n                }\n            }\n\n            return result;\n        }).join(\" \")\n}\n\nvar BEM = {\n    b(b) {\n        return function (elementName, modifiers={}) {\n            var e, m;\n            if (typeof elementName === \"string\") {\n                e = elementName;\n            } else {\n                modifiers = elementName || {};\n            }\n\n            m = Object.keys(modifiers).filter((modifier) => modifiers[modifier]) || [];\n\n            return getBEMPAth({b, e, m})\n        }\n    }\n}\n\nexport default BEM;"],"sourceRoot":"/source/"}