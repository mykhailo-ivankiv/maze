{"version":3,"sources":["js/components/ProgressController.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAKA,MAAI,CAAC,GAAG,KAAI,CAAC,CAAC,qBAAqB,CAAC,CAAC;AACrC,MAAI,CAAC,GAAG,KAAI,CAAC,CAAC,cAAc,CAAC,CAAA;;MAEvB,kBAAkB;AACV,aADR,kBAAkB,CACT,IAAI,EAAE;4BADf,kBAAkB;;AAEpB,iCAFE,kBAAkB,6CAEZ;AACR,UAAI,CAAC,KAAK,GAAG,EAAE,CAAC;KACjB;;cAJG,kBAAkB;;iBAAlB,kBAAkB;;aAMT,wBAAG;AAAE,0BAZD,WAAW,CAYE,WAAW,EAAE,CAAC;OAAE;;;aACjC,wBAAG;AAAE,0BAbD,WAAW,CAaE,WAAW,EAAE,CAAC;OAAE;;;aAE1C,gBAAG;AAAC,YAAI,CAAC,QAAQ,CAAC,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAA;OAAC;;;aAC/B,iBAAG;AAAC,YAAI,CAAC,QAAQ,CAAC,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC,CAAA;OAAC;;;aAE/B,kBAAG;AACR,eACE;;YAAK,SAAS,EAAE,CAAC,EAAE,AAAC;UAClB;;cAAQ,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,AAAC,EAAC,OAAO,EAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,AAAC;YAAC,4BAAG,SAAS,EAAC,gBAAgB,GAAE;WAAS;UAEhH,IAAI,CAAC,KAAK,CAAC,IAAI,GACZ;;cAAQ,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,AAAC,EAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,AAAC;YAAC,4BAAG,SAAS,EAAG,aAAa,GAAE;WAAS,GACvG;;cAAQ,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,AAAC,EAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,AAAC;YAAE,4BAAG,SAAS,EAAG,YAAY,GAAE;WAAS;UAI1G;;cAAQ,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,AAAC,EAAC,OAAO,EAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,AAAC;YAAC,4BAAG,SAAS,EAAC,eAAe,GAAE;WAAS;UAChH;;cAAK,SAAS,EAAE,CAAC,CAAC,UAAU,CAAC,AAAC;YAC5B,8BAAK,SAAS,EAAE,CAAC,CAAC,gBAAgB,CAAC,AAAC,GAAO;YAC3C,8BAAK,SAAS,EAAE,CAAC,CAAC,iBAAiB,CAAC,AAAC,GAAO;YAC5C,8BAAK,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,AAAC,GAAO;WAC/B;SACF,CACP;OACF;;;WA/BG,kBAAkB;KAAS,OAAM,SAAS;;mBAkCjC,kBAAkB","file":"js/components/ProgressController.js","sourcesContent":["import React from \"react\";\nimport BEM from \"utils/BEM\";\nimport {MazeStore, MazeActions} from \"storage/MazeStore\";\n\n\nvar b = BEM.b(\"progress-controller\");\nvar f = BEM.b(\"form-element\")\n\nclass ProgressController extends React.Component {\n  constructor (pref) {\n    super();\n    this.state = {};\n  }\n\n  nextMazeStep () { MazeActions.goToNextRow(); }\n  prevMazeStep () { MazeActions.goToPrevRow(); }\n\n  play() {this.setState({play: true})}\n  pause() {this.setState({play: false})}\n\n  render () {\n    return (\n      <div className={b()}>\n        <button className={f(\"button\")} onClick = {this.prevMazeStep.bind(this)}><i className=\"fa fa-backward\"/></button>\n\n        {this.state.play\n          ? <button className={f(\"button\")} onClick={this.pause.bind(this)}><i className = \"fa fa-pause\"/></button>\n          : <button className={f(\"button\")} onClick={this.play.bind(this)} ><i className = \"fa fa-play\"/></button>\n        }\n\n\n        <button className={f(\"button\")} onClick = {this.nextMazeStep.bind(this)}><i className=\"fa fa-forward\"/></button>\n        <div className={b(\"progress\")}>\n          <div className={b(\"total-progress\")}></div>\n          <div className={b(\"active-position\")}></div>\n          <div className={b(\"slider\")}></div>\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default ProgressController;\n"],"sourceRoot":"/source/"}